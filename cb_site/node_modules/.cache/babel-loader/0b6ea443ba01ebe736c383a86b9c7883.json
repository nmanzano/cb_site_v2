{"ast":null,"code":"var _jsxFileName = \"/Users/Tardis/codebase/react_projects/cb_directory/cb_site/src/containers/ViewProjectLink/ViewProjectLink.js\";\nimport React, { Component } from 'react';\nimport classes from './ViewProjectLink.module.css';\nimport { Link, withRouter } from 'react-router-dom'; // import PDFViewer from '../../components/PDFViewer/PDFViewer';\n\nclass ViewProjectLink extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      titleHover: false,\n      pdfLink: false,\n      videoLink: false,\n      externalLink: false\n    };\n\n    this.onHover = e => {\n      this.setState({\n        titleHover: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.linkSrc = this.props.liknSrc;\n\n    if (this.linkSrc.includes('pdf')) {\n      this.setState({\n        pdfLink: true\n      });\n    }\n\n    if (this.linkSrc.includes('youtube')) {\n      this.setState({\n        videoLink: true\n      });\n    }\n\n    if (this.linkSrc.includes('youtube')) {\n      this.setState({\n        externalLink: true\n      });\n    }\n  }\n\n  render() {\n    let typeOfLink;\n    let cardContentDiv = React.createElement(\"div\", {\n      onMouseOver: this.onHover.bind(this),\n      onMouseLeave: () => this.setState({\n        titleHover: false\n      }),\n      className: classes.FullOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.cardImage,\n      alt: \"?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), this.state.titleHover ? React.createElement(\"div\", {\n      className: classes.Viewproject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"View Project\")) : true);\n\n    if (this.state.pdfLink) {\n      typeOfLink = React.createElement(Link, {\n        to: {\n          pathname: `/view-pdf/`,\n          search: \"?q=\" + this.linkSrc\n        },\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, cardContentDiv);\n    }\n\n    if (this.state.videoLink) {\n      React.createElement(\"a\", {\n        style: \"display:none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: this.linkSrc,\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope;\",\n        allowfullscreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    } else {\n      typeOfLink = React.createElement(\"a\", {\n        href: this.linkSrc,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, cardContentDiv);\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.Projectdesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, typeOfLink);\n  }\n\n}\n\nexport default withRouter(ViewProjectLink);","map":{"version":3,"sources":["/Users/Tardis/codebase/react_projects/cb_directory/cb_site/src/containers/ViewProjectLink/ViewProjectLink.js"],"names":["React","Component","classes","Link","withRouter","ViewProjectLink","state","titleHover","pdfLink","videoLink","externalLink","onHover","e","setState","componentDidMount","linkSrc","props","liknSrc","includes","render","typeOfLink","cardContentDiv","bind","FullOverlay","cardImage","Viewproject","pathname","search","Projectdesc"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport classes from './ViewProjectLink.module.css'\nimport {Link, withRouter} from 'react-router-dom';\n// import PDFViewer from '../../components/PDFViewer/PDFViewer';\n\nclass ViewProjectLink extends Component {\n  state ={\n    titleHover: false,\n    pdfLink: false,\n    videoLink: false,\n    externalLink: false,\n  }\n\n  onHover = (e) => {\n    this.setState({ titleHover: true });\n  }\n\n  componentDidMount(){\n    this.linkSrc = this.props.liknSrc\n    if (this.linkSrc.includes('pdf')) {\n      this.setState({ pdfLink: true });\n    }\n    if (this.linkSrc.includes('youtube')) {\n      this.setState({ videoLink: true });\n    }\n    if (this.linkSrc.includes('youtube')) {\n      this.setState({ externalLink: true });\n    }\n  }\n\n  render(){\n    let typeOfLink;\n    let cardContentDiv = (\n        <div\n          onMouseOver={this.onHover.bind(this)}\n          onMouseLeave={() => this.setState({titleHover: false})}\n          className={classes.FullOverlay}>\n          <img src={this.props.cardImage} alt=\"?\"></img>\n        { this.state.titleHover ?\n          <div\n            className={classes.Viewproject}>\n            <h3>View Project</h3>\n        </div> : true }\n      </div>\n    )\n\n    if (this.state.pdfLink) {\n      typeOfLink =  (\n          <Link\n            to={{\n              pathname: `/view-pdf/`,\n              search: \"?q=\" + this.linkSrc\n            }}\n            target=\"_blank\"\n            >\n            {cardContentDiv}\n        </Link>)\n    }\n    if (this.state.videoLink){\n      <a style=\"display:none\">\n        <iframe width=\"560\" height=\"315\" src={this.linkSrc} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope;\" allowfullscreen></iframe>\n      </a>}else {\n      typeOfLink = (\n        <a\n          href={this.linkSrc}\n          target=\"_blank\"\n          >\n          {cardContentDiv}\n        </a> )\n    }\n\n    return(\n      <div className={classes.Projectdesc}>\n        {typeOfLink}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ViewProjectLink);\n"]},"metadata":{},"sourceType":"module"}