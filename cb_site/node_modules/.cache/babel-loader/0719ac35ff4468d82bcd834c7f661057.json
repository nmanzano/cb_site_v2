{"ast":null,"code":"var _jsxFileName = \"/Users/Tardis/codebase/react_projects/cb_directory/cb_site/src/components/Navigation/NavigationItems/NavigationItems.js\";\nimport React, { Component } from 'react';\nimport classes from './NavigationItems.module.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass NavigationItems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateWindowDimensions = () => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    this.toggleNavbar = e => {\n      console.log(e, 'this is e');\n\n      if (this.state.width <= 992 && this.state.collapsed) {\n        console.log('THIS IS 992');\n        this.setState({\n          collapsed: false\n        });\n      }\n    };\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true,\n      height: 0,\n      width: 0\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  render() {\n    const collapseStatus = this.state.collapsed ? 'navbar-collapse collapse' : 'navbar-collapse collapse show'; // console.log(collapseStatus, 'this is collapseStatus');\n\n    return React.createElement(Navbar, {\n      className: classes.NavBarStyle,\n      expand: \"lg\",\n      bg: \"#f3f3f3\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"/\",\n      className: classes.NavigationItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"CASSANDRA\"), React.createElement(Navbar.Toggle, {\n      onClick: e => {\n        this.toggleNavbar(e, 'changepage');\n      },\n      className: classes.NavBarMobile,\n      \"aria-controls\": \"responsive-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: `${collapseStatus}`,\n      id: \"responsive-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: classes.NavLink + \" ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/home\",\n      onClick: this.toggleNavbar,\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"HOME\"), React.createElement(NavLink, {\n      to: \"/instructional-design\",\n      onClick: this.toggleNavbar,\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"INSTRUCTIONAL DESIGN\"), React.createElement(NavLink, {\n      to: \"/technical-writing\",\n      onClick: this.toggleNavbar,\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"TECHNICAL WRITING\"), React.createElement(NavLink, {\n      to: \"/contact\",\n      onClick: this.toggleNavbar,\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"CONTACT\"))));\n  }\n\n}\n\nexport default NavigationItems;","map":{"version":3,"sources":["/Users/Tardis/codebase/react_projects/cb_directory/cb_site/src/components/Navigation/NavigationItems/NavigationItems.js"],"names":["React","Component","classes","Navbar","Nav","NavLink","NavigationItems","constructor","props","updateWindowDimensions","setState","width","window","innerWidth","height","innerHeight","toggleNavbar","e","console","log","state","collapsed","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","collapseStatus","NavBarStyle","NavBarMobile"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport classes from './NavigationItems.module.css';\nimport {Navbar, Nav } from 'react-bootstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass NavigationItems extends Component {\n\n  constructor(props) {\n    super(props);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true,\n      height: 0,\n      width: 0\n    };\n  }\n  componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n      this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  toggleNavbar = (e) => {\n    console.log(e, 'this is e');\n    if (this.state.width <= 992 && this.state.collapsed) {\n      console.log('THIS IS 992');\n      this.setState({\n        collapsed: false\n      });\n    }\n  }\n\n  render(){\n    const collapseStatus = this.state.collapsed ? 'navbar-collapse collapse' : 'navbar-collapse collapse show';\n    // console.log(collapseStatus, 'this is collapseStatus');\n    return(\n    <Navbar className={classes.NavBarStyle} expand=\"lg\" bg=\"#f3f3f3\" variant=\"light\">\n      <Navbar.Brand href=\"/\" className={classes.NavigationItems}>CASSANDRA</Navbar.Brand>\n    <Navbar.Toggle onClick={(e) => {this.toggleNavbar(e, 'changepage')}} className={classes.NavBarMobile} aria-controls=\"responsive-navbar-nav\" />\n      <div className={`${collapseStatus}`} id=\"responsive-navbar-nav\">\n        <Nav className={classes.NavLink + \" ml-auto\"}>\n          <NavLink to=\"/home\" onClick={this.toggleNavbar} className=\"nav-link\">HOME</NavLink>\n          <NavLink to=\"/instructional-design\" onClick={this.toggleNavbar} className=\"nav-link\">INSTRUCTIONAL DESIGN</NavLink>\n          <NavLink to=\"/technical-writing\" onClick={this.toggleNavbar} className=\"nav-link\">TECHNICAL WRITING</NavLink>\n          <NavLink to=\"/contact\" onClick={this.toggleNavbar} className=\"nav-link\">CONTACT</NavLink>\n        </Nav>\n      </div>\n    </Navbar>\n    )\n  }\n}\n\nexport default NavigationItems;\n"]},"metadata":{},"sourceType":"module"}