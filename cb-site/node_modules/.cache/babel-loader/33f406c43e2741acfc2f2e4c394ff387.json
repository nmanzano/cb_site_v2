{"ast":null,"code":"var _jsxFileName = \"/Users/Tardis/codebase/react_projects/cb-directory/cb-site/src/containers/ViewProjectLink/ViewProjectLink.js\";\nimport React, { Component } from 'react';\nimport classes from './ViewProjectLink.module.css';\nimport { Link, withRouter } from 'react-router-dom'; // import PDFViewer from '../../components/PDFViewer/PDFViewer';\n\nclass ViewProjectLink extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      titleHover: false,\n      fileIsPDF: false\n    };\n\n    this.onHover = e => {\n      this.setState({\n        titleHover: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.linkSrc = this.props.pdfSrc;\n\n    if (this.linkSrc.includes('pdf')) {\n      this.setState({\n        fileIsPDF: true\n      });\n    }\n  }\n\n  render() {\n    let typeOfLink;\n\n    if (this.state.fileIsPDF) {\n      typeOfLink = React.createElement(Link, {\n        to: {\n          pathname: `/view-pdf/`,\n          search: \"?q=\" + this.linkSrc\n        } // target=\"_blank\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onMouseOver: this.onHover.bind(this),\n        onMouseLeave: () => this.setState({\n          titleHover: false\n        }),\n        className: classes.FullOverlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.cardImage,\n        alt: \"?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), this.state.titleHover ? React.createElement(\"div\", {\n        className: classes.Viewproject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"View Project\")) : true));\n    } else {\n      typeOfLink = React.createElement(\"a\", {\n        href: this.linkSrc // target=\"_blank\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onMouseOver: this.onHover.bind(this),\n        onMouseLeave: () => this.setState({\n          titleHover: false\n        }),\n        className: classes.FullOverlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.cardImage,\n        alt: \"?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), this.state.titleHover ? React.createElement(\"div\", {\n        className: classes.Viewproject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"View Project\")) : true));\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.Projectdesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, typeOfLink);\n  }\n\n}\n\nexport default withRouter(ViewProjectLink);","map":{"version":3,"sources":["/Users/Tardis/codebase/react_projects/cb-directory/cb-site/src/containers/ViewProjectLink/ViewProjectLink.js"],"names":["React","Component","classes","Link","withRouter","ViewProjectLink","state","titleHover","fileIsPDF","onHover","e","setState","componentDidMount","linkSrc","props","pdfSrc","includes","render","typeOfLink","pathname","search","bind","FullOverlay","cardImage","Viewproject","Projectdesc"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport classes from './ViewProjectLink.module.css'\nimport {Link, withRouter} from 'react-router-dom';\n// import PDFViewer from '../../components/PDFViewer/PDFViewer';\n\nclass ViewProjectLink extends Component {\n  state ={\n    titleHover: false,\n    fileIsPDF: false\n  }\n\n  onHover = (e) => {\n    this.setState({ titleHover: true });\n  }\n\n  componentDidMount(){\n    this.linkSrc = this.props.pdfSrc\n    if (this.linkSrc.includes('pdf')) {\n      this.setState({ fileIsPDF: true });\n    }\n  }\n\n  render(){\n    let typeOfLink;\n\n    if (this.state.fileIsPDF) {\n      typeOfLink =  (\n          <Link\n            to={{\n              pathname: `/view-pdf/`,\n              search: \"?q=\" + this.linkSrc\n            }}\n            // target=\"_blank\"\n            >\n              <div\n                onMouseOver={this.onHover.bind(this)}\n                onMouseLeave={() => this.setState({titleHover: false})}\n                className={classes.FullOverlay}>\n                <img src={this.props.cardImage} alt=\"?\"></img>\n              { this.state.titleHover ?\n                <div\n                  className={classes.Viewproject}>\n                  <h3>View Project</h3>\n              </div> : true }\n            </div>\n        </Link>)\n    }else {\n      typeOfLink = (\n        <a\n          href={this.linkSrc}\n          // target=\"_blank\"\n          >\n            <div\n              onMouseOver={this.onHover.bind(this)}\n              onMouseLeave={() => this.setState({titleHover: false})}\n              className={classes.FullOverlay}>\n              <img src={this.props.cardImage} alt=\"?\"></img>\n            { this.state.titleHover ?\n              <div\n                className={classes.Viewproject}>\n                <h3>View Project</h3>\n            </div> : true }\n          </div>\n        </a> )\n    }\n\n    return(\n      <div className={classes.Projectdesc}>\n        {typeOfLink}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ViewProjectLink);\n"]},"metadata":{},"sourceType":"module"}