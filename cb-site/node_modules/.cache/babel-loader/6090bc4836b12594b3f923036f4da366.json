{"ast":null,"code":"var _jsxFileName = \"/Users/Tardis/codebase/react_projects/cb-directory/cb-site/src/containers/ViewProjectLink/ViewProjectLink.js\";\nimport React, { Component } from 'react';\nimport classes from './ViewProjectLink.module.css';\nimport { Link, withRouter } from 'react-router-dom'; // import PDFViewer from '../../components/PDFViewer/PDFViewer';\n\nclass ViewProjectLink extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      titleHover: false,\n      fileIsPDF: false\n    };\n\n    this.onHover = e => {\n      this.setState({\n        titleHover: true\n      });\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    console.log(this.props.pdfSrc, 'this.props.pdfSrc');\n    this.linkSrc = this.props.pdfSrc;\n\n    if (!this.linkSrc) {\n      this.setState({\n        fileIsPDF: true\n      });\n      console.log(this.state.fileIsPDF, 'fileIsPDF');\n    }\n  } // determinePassedParam = () =>{\n  //   return this.props.pdfSrc\n  // }\n\n\n  render() {\n    console.log(this.props.pdfSrc, 'this.props.pdfSrc');\n    return React.createElement(\"div\", {\n      className: classes.Projectdesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: `/view-pdf/`,\n        search: \"?q=\" + this.linkSrc\n      } // target=\"_blank\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onMouseOver: this.onHover.bind(this),\n      onMouseLeave: () => this.setState({\n        titleHover: false\n      }),\n      className: classes.FullOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.cardImage,\n      alt: \"?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), this.state.titleHover ? React.createElement(\"div\", {\n      className: classes.Viewproject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"View Project\")) : true)));\n  }\n\n}\n\nexport default withRouter(ViewProjectLink);","map":{"version":3,"sources":["/Users/Tardis/codebase/react_projects/cb-directory/cb-site/src/containers/ViewProjectLink/ViewProjectLink.js"],"names":["React","Component","classes","Link","withRouter","ViewProjectLink","state","titleHover","fileIsPDF","onHover","e","setState","UNSAFE_componentWillMount","console","log","props","pdfSrc","linkSrc","render","Projectdesc","pathname","search","bind","FullOverlay","cardImage","Viewproject"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B,C,CACA;;AAEA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCK,KADsC,GAC/B;AACLC,MAAAA,UAAU,EAAE,KADP;AAELC,MAAAA,SAAS,EAAE;AAFN,KAD+B;;AAAA,SAMtCC,OANsC,GAM3BC,CAAD,IAAO;AACf,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,UAAU,EAAE;AAAd,OAAd;AACD,KARqC;AAAA;;AAUtCK,EAAAA,yBAAyB,GAAG;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,MAAvB,EAA+B,mBAA/B;AACA,SAAKC,OAAL,GAAe,KAAKF,KAAL,CAAWC,MAA1B;;AACA,QAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,WAAKN,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,SAAvB,EAAkC,WAAlC;AACD;AACF,GAjBqC,CAkBtC;AACA;AACA;;;AAEAU,EAAAA,MAAM,GAAE;AAENL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,MAAvB,EAA+B,mBAA/B;AAEA,WACE;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACiB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAE;AACHC,QAAAA,QAAQ,EAAG,YADR;AAEHC,QAAAA,MAAM,EAAE,QAAQ,KAAKJ;AAFlB,OADN,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AACE,MAAA,WAAW,EAAE,KAAKR,OAAL,CAAaa,IAAb,CAAkB,IAAlB,CADf;AAEE,MAAA,YAAY,EAAE,MAAM,KAAKX,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAE;AAAb,OAAd,CAFtB;AAGE,MAAA,SAAS,EAAEL,OAAO,CAACqB,WAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAK,MAAA,GAAG,EAAE,KAAKR,KAAL,CAAWS,SAArB;AAAgC,MAAA,GAAG,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,KAAKlB,KAAL,CAAWC,UAAX,GACF;AACE,MAAA,SAAS,EAAEL,OAAO,CAACuB,WADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADE,GAIO,IATX,CAPF,CADF,CADF;AAuBD;;AAjDqC;;AAoDxC,eAAerB,UAAU,CAACC,eAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\nimport classes from './ViewProjectLink.module.css'\nimport {Link, withRouter} from 'react-router-dom';\n// import PDFViewer from '../../components/PDFViewer/PDFViewer';\n\nclass ViewProjectLink extends Component {\n  state ={\n    titleHover: false,\n    fileIsPDF: false\n  }\n\n  onHover = (e) => {\n    this.setState({ titleHover: true });\n  }\n\n  UNSAFE_componentWillMount (){\n    console.log(this.props.pdfSrc, 'this.props.pdfSrc');\n    this.linkSrc = this.props.pdfSrc\n    if (!this.linkSrc) {\n      this.setState({ fileIsPDF: true });\n      console.log(this.state.fileIsPDF, 'fileIsPDF');\n    }\n  }\n  // determinePassedParam = () =>{\n  //   return this.props.pdfSrc\n  // }\n\n  render(){\n\n    console.log(this.props.pdfSrc, 'this.props.pdfSrc');\n\n    return(\n      <div className={classes.Projectdesc}>\n        <Link\n          to={{\n           pathname: `/view-pdf/`,\n           search: \"?q=\" + this.linkSrc\n          }}\n          // target=\"_blank\"\n          >\n          <div\n            onMouseOver={this.onHover.bind(this)}\n            onMouseLeave={() => this.setState({titleHover: false})}\n            className={classes.FullOverlay}>\n              <img src={this.props.cardImage} alt=\"?\"></img>\n            { this.state.titleHover ?\n            <div\n              className={classes.Viewproject}>\n              <h3>View Project</h3>\n            </div> : true }\n          </div>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ViewProjectLink);\n"]},"metadata":{},"sourceType":"module"}